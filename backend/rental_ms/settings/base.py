"""
Django settings for rental_ms project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from .config import env_setting
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _
from django.templatetags.static import static

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env_setting.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env_setting.DEBUG

ALLOWED_HOSTS = env_setting.ALLOWED_HOSTS


# Application definition

INSTALLED_APPS = [
    "jazzmin",
    "ckeditor",
    "import_export",
    "corsheaders",
    "users.apps.UsersConfig",
    "finance.apps.FinanceConfig",
    "external.apps.ExternalConfig",
    "rental.apps.RentalConfig",
    "management.apps.ManagementConfig",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    # "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.middleware.locale.LocaleMiddleware",
]

ROOT_URLCONF = "rental_ms.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": ["templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "rental_ms.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

try:
    import pymysql

    pymysql.install_as_MySQLdb()
except ImportError:
    # Still okay maybe other engines are set.
    pass

DATABASES = {
    "default": {
        "ENGINE": env_setting.DATABASE_ENGINE,
        "NAME": env_setting.DATABASE_NAME,
        "USER": env_setting.DATABASE_USER,
        "PASSWORD": env_setting.DATABASE_PASSWORD,
        "HOST": env_setting.DATABASE_HOST,
        "PORT": str(env_setting.DATABASE_PORT),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


EMAIL_BACKEND = env_setting.EMAIL_BACKEND
EMAIL_HOST = env_setting.EMAIL_HOST
EMAIL_PORT = str(env_setting.EMAIL_PORT)
EMAIL_USE_TLS = env_setting.EMAIL_USE_TLS
EMAIL_HOST_USER = env_setting.EMAIL_HOST_USER
EMAIL_HOST_PASSWORD = env_setting.EMAIL_HOST_PASSWORD
DEFAULT_FROM_EMAIL = env_setting.DEFAULT_FROM_EMAIL

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = env_setting.LANGUAGE_CODE
TIME_ZONE = env_setting.TIME_ZONE
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

FRONTEND_DIR = (
    BASE_DIR / env_setting.FRONTEND_DIR
    if env_setting.FRONTEND_DIR is not None
    else None
)

LANGUAGES = (
    ("de", _("German")),
    ("en", _("English")),
    ("fr", _("French")),
    ("sw", _("Swahili")),
)

CORS_ALLOWED_ORIGINS = env_setting.CORS_ALLOWED_ORIGINS
CORS_ALLOWED_ORIGIN_REGEXES = env_setting.CORS_ALLOWED_ORIGIN_REGEXES
CORS_ALLOW_ALL_ORIGINS = env_setting.CORS_ALLOW_ALL_ORIGINS

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "/static/"
files_root = BASE_DIR / "files"
STATIC_ROOT = files_root / "static"
MEDIA_URL = "/media/"
MEDIA_ROOT = files_root / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AUTH_USER_MODEL = "users.CustomUser"


# M-PESA

MPESA_TOKEN = env_setting.MPESA_TOKEN
"""Just for simulation"""
MPESA_AUTHORIZATION = env_setting.MPESA_AUTHORIZATION
"""Just for simulation"""
MPESA_PASSWORD = env_setting.MPESA_PASSWORD
"""Just for simulation"""

# SITE
SITE_NAME = env_setting.SITE_NAME
SITE_ADDRESS = env_setting.SITE_ADDRESS


# UTILS

CURRENCY = env_setting.CURRENCY
"""Transaction currency"""

# ADMIN
JAZZMIN_SETTINGS = {
    "show_ui_builder": env_setting.DEBUG,
    "site_title": SITE_NAME,
    "site_header": SITE_NAME,
    "site_brand": SITE_NAME,
    "site_logo": "carwash/img/logo.png",
    "site_logo_classes": "img-circle",
    "welcome_sign": f"Welcome to {SITE_NAME}",
    "copyright": SITE_NAME,
    "user_avatar": "profile",
    "topmenu_links": [
        {"name": "Home", "url": "admin:index", "permissions": ["auth.view_user"]},
        {
            "name": "Index",
            "url": "/",
            "new_window": True,
        },
        {
            "name": "Support",
            "url": "https://github.com/Simatwa/carwash-management-system/issues",
            "new_window": True,
        },
        {"model": "users.CustomUser"},
        {"app": "rental"},
    ],
    "search_model": ["rental.Tenant"],
    "language_chooser": True,
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.Group": "fas fa-users",
        "users.CustomUser": "fas fa-user",
        "finance.Transaction": "fas fa-money-check-alt",
        "finance.UserAccount": "fas fa-wallet",
        "finance.Account": "fas fa-file-invoice-dollar",
        "finance.ExtraFee": "fas fa-coins",
        "management.Office": "fas fa-building",
        "management.Concern": "fas fa-exclamation-circle",
        "management.Community": "fas fa-users",
        "management.CommunityMessage": "fas fa-comments",
        "management.GroupMessage": "fas fa-comments",
        "management.PersonalMessage": "fas fa-envelope-open-text",
        "management.AppUtility": "fas fa-tools",
        "rental.House": "fas fa-home",
        "rental.UnitGroup": "fas fa-building",
        "rental.Unit": "fas fa-door-open",
        "rental.Tenant": "fas fa-user-tie",
        "external.ServiceFeedback": "fas fa-comments",
        "external.Gallery": "fas fa-images",
        "external.About": "fas fa-info-circle",
        "external.Faq": "fas fa-question-circle",
        "external.Message": "fas fa-envelope",
    },
}

JAZZMIN_UI_TWEAKS = {
    "navbar_small_text": False,
    "footer_small_text": False,
    "body_small_text": False,
    "brand_small_text": False,
    "brand_colour": "navbar-purple",
    "accent": "accent-teal",
    "navbar": "navbar-purple navbar-dark",
    "no_navbar_border": False,
    "navbar_fixed": True,
    "layout_boxed": False,
    "footer_fixed": False,
    "sidebar_fixed": True,
    "sidebar": "sidebar-dark-olive",
    "sidebar_nav_small_text": False,
    "sidebar_disable_expand": False,
    "sidebar_nav_child_indent": False,
    "sidebar_nav_compact_style": False,
    "sidebar_nav_legacy_style": False,
    "sidebar_nav_flat_style": False,
    "theme": "default",
    "dark_mode_theme": None,
    "button_classes": {
        "primary": "btn-primary",
        "secondary": "btn-secondary",
        "info": "btn-outline-info",
        "warning": "btn-outline-warning",
        "danger": "btn-outline-danger",
        "success": "btn-outline-success",
    },
    "actions_sticky_top": False,
}
